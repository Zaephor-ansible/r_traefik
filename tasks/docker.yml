---
- name: "traefik container"
  when: "traefik_install"
  docker_container:
    name: "traefik"
    state: started
    image: traefik:v2.3
    comparisons:
      '*': strict
    restart_policy: unless-stopped
    keep_volumes: no
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--entryPoints.ping.address=:8082", "--ping.entryPoint=ping"]
      start_period: 5m
      interval: "{{ healthcheck.interval | default('30s') }}"
      timeout: "{{ healthcheck.timeout | default('3s') }}"
    ports: >-
      {{ [
      '80:80',
      '443:443' if traefik_ssl | default(false) else false,
      traefik_dashboard + ':8080' if traefik_dashboard | default(false) else false
      ] | select | list }}
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - /srv/config/traefik/cfg:/config
    - /srv/config/traefik/acme:/acme
    - /srv/config/traefik/log:/var/log
    command: >-
      --providers.file.watch=true
      --providers.file.directory=/config
      --providers.docker=true
      --providers.docker.exposedByDefault=false
      --entrypoints.web.address=:80
      --serverstransport.insecureskipverify=true
      --ping=true
      --entryPoints.ping.address=:8082
      --ping.entryPoint=ping
      {% if traefik_ssl | default(false) %}
      --entrypoints.websecure.address=:443
      {% endif %}
      {% if traefik_le_email | default(false) %}
      --certificatesResolvers.le.acme.email={{ traefik_le_email }}
      --certificatesResolvers.le.acme.storage=/acme/acme.json
      --certificatesResolvers.le.acme.httpChallenge.entryPoint=web
      {% endif %}
      {% if traefik_dashboard | default(false) %}
      --api.insecure=true
      --api.dashboard=true
      {% endif %}
      {% if traefik_debug | default(false) %}
      --log.filePath=/var/log/traefik.log
      --log.level=DEBUG
      {% endif %}

